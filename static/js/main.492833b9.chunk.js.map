{"version":3,"sources":["Part2/Counter.js","Part2/Totalcomponent.js","Part2/App.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","this","props","handle","changeAction","className","type","onChange","e","val","target","value","isNaN","console","log","Component","Totalcomponent","total","App","onChangeHandler","id","rv","parseInt","setState","pv","id1","id2","id3","state","data","map","it","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEqBA,E,4JAEjB,WAEE,MAAgCC,KAAKC,MAA9BC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,aAiBf,OAEE,sBAAKC,UAAU,UAAf,UAEE,yCAAYF,KACZ,qBAAKE,UAAU,aAAf,SACI,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,SApB5B,SAACC,GAEvB,IAAIC,EAAMD,EAAEE,OAAOC,MACfC,MAAMH,IAAgB,KAARA,EAIhBI,QAAQC,IAAI,gCAHZD,QAAQC,IAAI,iBACZV,EAAaD,EAAOM,SAkBpB,qBAAKJ,UAAU,0C,GA9BYU,aCStBC,MATf,YAAkC,IAATC,EAAQ,EAARA,MACvB,OACE,gCACE,oBAAIZ,UAAU,cAAd,2BACA,oBAAIA,UAAU,cAAd,SAA6BY,QCDdC,E,kDAEnB,aAAc,IAAD,8BACX,gBAYFC,gBAAiB,SAACC,EAAIX,GACpB,IAAIY,EAAKC,SAASb,GAClBI,QAAQC,IAAI,sBACZD,QAAQC,IAAI,cAAcM,EAAGX,GACnB,IAAPW,EACD,EAAKG,UAAS,SAACC,GAAD,MAAS,CACrBC,IAAKD,EAAGC,IAAOJ,MAGH,IAAPD,EACP,EAAKG,UAAS,SAACC,GAAD,MAAS,CACrBE,IAAKF,EAAGE,IAAOL,MAGH,IAAPD,GACP,EAAKG,UAAS,SAACC,GAAD,MAAS,CACrBG,IAAKH,EAAGG,IAAON,OA3BnB,EAAKO,MAAQ,CACXH,IAAI,EACJC,IAAI,EACJC,IAAI,GALK,E,0CAmCb,WAAU,IAAD,OAEDE,EAAO,CACX,CAACT,GAAG,EAAET,MAAMV,KAAK2B,MAAMH,KACvB,CAACL,GAAG,EAAET,MAAMV,KAAK2B,MAAMF,KACvB,CAACN,GAAG,EAAET,MAAMV,KAAK2B,MAAMD,MAGnBV,EAAQY,EAAK,GAAGlB,MAAQkB,EAAK,GAAGlB,MAAQkB,EAAK,GAAGlB,MAEtD,OACE,gCAEA,qBAAKN,UAAU,0BAAf,SACM,4DAGN,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACIwB,EAAKC,KAAI,SAACC,GAAD,OACT,qBAAK1B,UAAU,qBAAf,SACM,sBAAKA,UAAU,WAAf,UACA,qBAAIA,UAAU,MAAd,wBAAgC0B,EAAGX,MACnC,oBAAIf,UAAU,iBAAd,SAAgC0B,EAAGpB,YAHAoB,EAAGX,WAUlD,qBAAKf,UAAU,sBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,UACf,qBAAKA,UAAU,QAAf,SAAuB,cAAC,EAAD,CAAgBY,MAAOA,WAKhD,oBAAIZ,UAAU,mBAAd,kCACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACCwB,EAAKC,KAAI,SAACC,GAAD,OACR,qBAAK1B,UAAU,QAAf,SACE,qBAAKA,UAAU,cAAf,SACA,cAAC,EAAD,CAAqBM,MAAOoB,EAAGpB,MAAOR,OAAQ4B,EAAGX,GAAIhB,aAAc,EAAKe,iBAA1DY,EAAGX,sB,GAjFEL,aCWlBG,MARf,WACE,OACC,mCACA,cAAC,EAAD,OCCYc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.492833b9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Counter extends Component { \r\n\r\n    render() {\r\n  \r\n      const {handle, changeAction } = this.props;\r\n\r\n      \r\n      const incrementHandler =(e)=>{\r\n        // let val =2;\r\n        let val = e.target.value        \r\n        if(!isNaN(val) && val !== ''){\r\n          console.log(\"Correct Input\")\r\n          changeAction(handle,val)\r\n        }else{\r\n          console.log(\"It is String Must be Number\")\r\n        }\r\n      }\r\n   \r\n\r\n      \r\n  \r\n      return (\r\n  \r\n        <div className=\"counter\">\r\n  \r\n          <h2>Couner {handle}</h2>\r\n          <div className=\"from-group\">\r\n              <input type=\"text\" className=\"form-control\" onChange={incrementHandler} />\r\n          </div>\r\n  \r\n          <div className=\"d-flex justify-content-between\"> \r\n\r\n           \r\n           \r\n          </div>\r\n  \r\n        </div>\r\n  \r\n      );\r\n  \r\n    }\r\n  \r\n  }","import React from 'react'\r\n\r\nfunction Totalcomponent({total}) {\r\n  return (\r\n    <div>\r\n      <h4 className=\"text-center\">Total Counter</h4>\r\n      <h1 className=\"text-center\">{total}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Totalcomponent\r\n","import React, { Component } from 'react'\r\n\r\nimport Counter from './Counter';\r\nimport Totalcomponent from './Totalcomponent';\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      id1:0,\r\n      id2:0,\r\n      id3:0,\r\n    };\r\n    \r\n  };\r\n  \r\n  \r\n\r\n\r\n  onChangeHandler =(id, val)=> {\r\n    let rv = parseInt(val)\r\n    console.log(\"Decrement function\");\r\n    console.log(\"Parennt Val\",id,val)\r\n    if(id === 1 ){\r\n      this.setState((pv) => ({\r\n        id1: pv.id1 + (rv)\r\n      }))\r\n\r\n    }else if(id === 2){\r\n      this.setState((pv) => ({\r\n        id2: pv.id2 + (rv)\r\n      }))\r\n\r\n    }else if(id === 3){\r\n      this.setState((pv) => ({\r\n        id3: pv.id3 + (rv)\r\n      }))\r\n    }\r\n   \r\n  } \r\n\r\n  render() {\r\n\r\n    const data = [\r\n      {id:1,value:this.state.id1},\r\n      {id:2,value:this.state.id2},\r\n      {id:3,value:this.state.id3}\r\n    ];\r\n\r\n    const total = data[0].value + data[1].value + data[2].value;\r\n\r\n    return (\r\n      <div>\r\n\r\n      <div className=\"bg-info text-center p-3\">\r\n            <h1>Counter App By Nitest P2</h1>            \r\n      </div>\r\n\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row\">\r\n          { data.map((it)=> \r\n            <div className=\"col-4 text-center \" key={it.id}>\r\n                  <div className=\"bg-light\">\r\n                  <h4 className=\"p-4\">Value Of Id{it.id}</h4>\r\n                  <h1 className=\"pb-3 text-info\">{it.value}</h1>\r\n                  </div>\r\n            </div>\r\n          )}                      \r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"container mt-3 mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\"></div>\r\n          <div className=\"col-4\"><Totalcomponent total={total} /></div>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n        <h2 className=\"text-center mt-3\">Componet Controller </h2>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n          {data.map((it)=>\r\n            <div className=\"col-4\">\r\n              <div className=\"p-3 bg-info\">\r\n              <Counter key={it.id} value={it.value} handle={it.id} changeAction={this.onChangeHandler}/>\r\n              </div>\r\n            </div>\r\n          )}\r\n          </div>\r\n        \r\n          \r\n        \r\n        </div>\r\n\r\n        \r\n\r\n\r\n       \r\n\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n// import CApp from './ClassBased/App';\nimport CApp from './Part2/App';\n\n\n\nfunction App() {\n  return (\n   <>\n   <CApp/>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}